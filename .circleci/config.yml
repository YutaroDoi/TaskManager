version: 2 # CircleCIはversion2を指定
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.2-node # nodejs付きの公式rubyイメージを使う
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PG_HOST: 127.0.0.1
          PG_USER: circleci-demo-ruby
          PG_PASSWORD: pass
          RAILS_ENV: test
      - image: circleci/postgres:9.6-alpine # database image
        environment: # environment variables for database
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: rails_test
          POSTGRES_PASSWORD: pass
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      # bundlerのバージョンを表示
      - run:
          name: Which bundler
          command: bundle -v

      # bundleのキャッシュがあれば使用
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # bundleをキャッシュとして保存
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # 現段階ではjsを使わないため保留
      # # Only necessary if app uses webpacker or yarn in some other way
      # - restore_cache:
      #     keys:
      #       - rails-demo-yarn-{{ checksum "yarn.lock" }}
      #       - rails-demo-yarn-

      # - run:
      #     name: Yarn Install
      #     command: yarn install --cache-folder ~/.cache/yarn

      # # Store yarn / webpacker cache
      # - save_cache:
      #     key: rails-demo-yarn-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/.cache/yarn
      
      #rubocopを走らせる
      - run:
          name: Rubocop
          command: bundle exec rubocop
       
      #DBコンテナのセットアップを待つ
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      #database.ymlをCI用にすり替え
      - run: 
          name: Change database.yml to database.ci.yml
          command: mv config/database.ci.yml config/database.yml
      
      #DBを作成
      - run: bin/rails db:create

      #schemaの反映
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      #RSpecの実行
      - type: shell
        command: |
            bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs